/**
 *
 * _app.tsx で読み込まれるグローバルスタイル
 * Next.jsは、設定なしでCSSをコンパイル
 *   - Autoprefixer
 *   - Cross-browser Flexbox bugs
 *   - IE11 用 New CSS features Polyfill (※ CSS Grid はコメントでの有効化が必要、Custom Properties は使えない)
 * package.json の "browserslist" で、対応ブラウザ設定
 * PostCSS で Tailwind やその他プラグインを使用
 * @see https://nextjs.org/docs/advanced-features/customizing-postcss-config
 *
 */

/**
 * Tailwind
 * @see https://github.com/vercel/next.js/tree/canary/examples/with-tailwindcss
 * @see https://tailwindcss.com/docs/using-with-preprocessors
 *   @import は冒頭に配置する必要がある。他の CSS ファイルの読み込みができるよう、
 *   Tailwind のファイルを @tailwind → @import の記述に変えて読み込む
 */
@import "tailwindcss/base"; /* @tailwind base; */
/*@import "./custom-base-styles.css";*/

@import "tailwindcss/components"; /* @tailwind components; */
/*@import "./custom-components.css";*/

@import "tailwindcss/utilities"; /* @tailwind utilities; */
/*@import "./custom-utilities.css";*/


/**
 * import のテスト用
 */
@import "../components/Alert.module.css";
@import "../components/Button.module.css";


/**
 * Tailwind @apply テスト
 * @layer: base, components, utilities
 * @layer ディレクティブ内の CSS を、対応する @tailwind ルールと同じ場所に自動的に移動する
 *   なので、特異性の問題回避のための順序の考慮は不要
 * @apply での指定、デフォルトで !important が削除される(特異性の問題を回避するため)
 *   特異性高めたいなら、指定に !important 付ける
 * よりきれいに見せるためだけに @apply を使用しないこと(ワークフローと保守性の利点を捨てることになる)
 *   ボタンやフォームコントロールなど、非常に小さく、再利用性の高いものに使用する
 */

/*@layer base {*/
/*  h1 {*/
/*    @apply text-2xl;*/
/*  }*/
/*  h2 {*/
/*    @apply text-xl;*/
/*  }*/
/*}*/

@layer components {
  .btn-primary {
    @apply py-2 px-4 bg-blue-500 hover:bg-blue-700 text-white font-semibold no-underline hover:underline rounded-full shadow-md focus:outline-none focus:ring-2 focus:ring-blue-400 focus:ring-opacity-75;
  }
  .box__alert {
    @apply bg-red-50 border border-red-200 text-sm text-red-600 rounded-md p-4;
  }
}

/**
 * @layer に含めない CSS は、コンパイルされた CSS に常に含まれる
 */

:root {
  /**
   * Custom Properties
   */
  --measure: 80ch;
  --font-size-small: 0.625rem; /* 10px */
  --font-size-smaller: 0.875rem; /* 14px */
  --font-size-base: 1rem; /* 16px */
  --font-size-biggish: 1.5rem; /* 24px */
  --font-size-big: 2rem; /* 32px */

  /**
   * Modes
   * color-scheme: dark; オペレーティングシステムのダーク配色を使用
   */
  color-scheme: dark light;
}

/**
 * Base styles
 */
* {
  max-inline-size: var(--measure); /* ≒ max-width (方向で変わる)、メジャーは --measure を超えてはならない 2/3 */
}

html, body, div,
header, nav, main, footer {
  max-inline-size: none;
}

section,
p, h1, h2, h3, h4, h5, h6,
ul, figcaption {
  margin-inline-start: auto;
  margin-inline-end: auto;
}

/**
 * General purpose classes
 */
.alignwide {
  --measure: 100ch;
}
.alignfull {
  --measure: 100vw;
}

/* Font Size */
.font-size\:small {
  font-size: var(--font-size-small) !important;
}
.font-size\:smaller {
  font-size: var(--font-size-smaller) !important;
}
.font-size\:base {
  font-size: var(--font-size-base) !important;
}
.font-size\:biggish {
  font-size: var(--font-size-biggish) !important;
}
.font-size\:big {
  font-size: var(--font-size-big) !important;
}

h1, h2, h3, h4, h5, h6 {
  font-weight: bold;
}

h1 { font-size: 2rem; }
h2 { font-size: 1.75rem; }
h3 { font-size: 1.5rem; }
h4 { font-size: 1.25rem; }
h5 { font-size: 1.1rem; }
h6 {}

main a { /* ★★TODO: ボタンの場合どうする？ */
  text-decoration: underline;
}
main p + p {
  margin-top: 1em;
}

/**
 * General purpose classes
 */
.alignwide {
  --measure: 100ch;
}
.alignfull {
  --measure: 100vw;
}

/* The Stack */
[class^='stack'] > * {
  /* horizontal-tb writing モードでの上下マージン */
  margin-block: 0;
}
.stack > * + * {
  margin-block-start: var(--space, 1.5em);
}
.stack-large > * + * {
  margin-block-start: 3rem;
}
.stack-small > * + * {
  margin-block-start: 1rem;
}
/* 例外 (カスタムプロパティでオーバーライド) 上下に例外の間隔を適用 */
.stack-exception,
.stack-exception + * { /* ← 上のスペースだけを増やしたい場合は削除 */
  --space: 3rem;
}

.stack-card {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
}
.stack-card > * {
  margin-block: 0;
}
.stack-card > * + * {
  margin-block-start: var(--space, 1.5rem);
}
.stack-card:only-child {
  block-size: 100%;
}
.stack-card > :nth-child(2) {
  margin-block-end: auto;
}

/**
 * 一時無効化 (Every Layout 他)
 */
/*@import "./globals-disable.css";*/